{"version":3,"file":"static/js/543.2070916d.chunk.js","mappings":"mMAgBA,EAZmB,SAACA,GAEhB,IAAIC,EAAO,aAAeD,EAAME,GAChC,OACI,gBAAKC,UAAWC,EAAAA,EAAAA,OAAW,IAAMA,EAAAA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAME,UAAW,SAAAG,GAAO,OAAIA,EAAQC,SAAWH,EAAAA,EAAAA,OAAWA,EAAAA,EAAAA,MAAlC,EAArC,SAAkFJ,EAAMQ,QAGnG,E,iDCFKC,GAAcC,EAAAA,EAAAA,GAAiB,IAuB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,kBADkBD,EArBL,SAACZ,GACpB,OAEI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CACIR,KAAM,iBACNS,UAAWC,EAAAA,GACXC,YAAa,qBACbC,SAAU,CAACC,EAAAA,EAAUZ,QAE7B,0BACI,iDAOf,IAqCD,EA9BgB,SAACT,GACb,IAKIsB,EAAkBtB,EAAMuB,YAAYC,QAAQC,KAAI,SAAAC,GAChD,OAAO,SAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAMN,GAAIwB,EAAExB,IAC1C,IAEGyB,EAAmB3B,EAAMuB,YAAYK,SAASH,KAAI,SAAAI,GAClD,OAAO,SAACC,EAAA,EAAD,CAASC,QAASF,EAAEE,QAAS7B,GAAI2B,EAAE3B,IAC7C,IAGD,OACI,iBAAKC,UAAWC,EAAAA,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,EAAAA,aAAhB,SACKkB,KAGL,gBAAKnB,UAAWC,EAAAA,EAAAA,SAAhB,UACI,yBAAMuB,OAGV,SAAChB,EAAD,CAAqBG,SAxBZ,SAACkB,GACdhC,EAAMiC,mBAAmBD,EAAOE,eAEnC,MAwBJ,E,oBC/BD,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KA1BkB,SAACC,GACnB,MAAO,CACHd,YAAac,EAAMd,YAG1B,IACwB,SAACe,GAGtB,MAAO,CACHL,mBAAoB,SAACC,GACjBI,GAASC,EAAAA,EAAAA,GAAmBL,GAC/B,EAIR,IAWGM,EAAAA,EAFJ,CAGEC,E","sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    {/* добавляем к url user id */ }\r\n    let path = \"/dialogs/*\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path} className={navData => navData.isActive ? s.active : s.dialog}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport s from './Dialogs.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={'newMessageBody'}\r\n                    component={Textarea}\r\n                    placeholder={\"Enter your message\"}\r\n                    validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button >Send message</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'newMessageBody'\r\n})(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.onSendMessageClick(values.newMessageBody);\r\n\r\n    }\r\n    // use map method to convert data to JSX for each element\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => {\r\n        return <DialogItem name={d.name} id={d.id} />\r\n    });\r\n\r\n    let messagesElements = props.dialogsPage.messages.map(m => {\r\n        return <Message message={m.message} id={m.id} />\r\n    });\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {// connect автомостически в аргумент в 1й функции вкладывает state\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {// connect автомостически в аргумент во второй\r\n    //функции вызывает забайнденный dispatch из store\r\n\r\n    return {\r\n        onSendMessageClick: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\n\r\n// Про Connect - в 1м вызове connect передаем функции которые возвращают объекты с данными или методы store\r\n//во 2м вызове указывается компоменента для которой передаем props через 2 функ-ии\r\n//в 1м вызове функци connect\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","className","s","to","navData","isActive","name","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","Message","message","values","onSendMessageClick","newMessageBody","compose","connect","state","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}